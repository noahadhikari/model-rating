generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

generator js {
    provider        = "prisma-client-js"
    previewFeatures = ["referentialIntegrity"]
}

datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
    @@index([userId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@index([userId])
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    Rating        Rating[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Model {
    id       Int      @id @default(autoincrement())
    name     String
    stlId    String   @unique
    binvoxId String?
    folderId String
    Rating   Rating[]
}

model Rating {
    id           Int     @id @default(autoincrement())
    modelId      Int
    reasoning    String?
    userId       String
    score        Int     @default(-100)
    tweakerScore Float?
    model        Model   @relation(fields: [modelId], references: [id])
    creator      User    @relation(fields: [userId], references: [id])

    @@index([modelId])
    @@index([userId])
}

model de888608_5bbd_56c2_8434_dfd888a9e3e2_20230316191710_vrepl {
    id        Int     @id @default(autoincrement())
    modelId   Int
    reasoning String?
    userId    String
    score     Int     @default(-100)

    @@index([modelId], map: "Rating_modelId_idx")
    @@index([userId], map: "Rating_userId_idx")
    @@map("_de888608_5bbd_56c2_8434_dfd888a9e3e2_20230316191710_vrepl")
}
